name: 'Copilot Setup Steps'

# Automatically run the setup steps when they are changed to allow for easy validation, and
# allow manual testing through the repository's "Actions" tab
on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  # The job MUST be called `copilot-setup-steps` or it will not be picked up by Copilot.
  copilot-setup-steps:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    # Set the permissions to the lowest permissions possible needed for your steps.
    # Copilot will be given its own token for its operations.
    permissions:
      # If you want to clone the repository as part of your setup steps, for example to install dependencies, you'll need the `contents: read` permission. If you don't clone the repository in your setup steps, Copilot will do this for you automatically after the steps complete.
      contents: read

    # You can define any steps you want, and they will run before the agent starts.
    # If you do not check out your code, Copilot will do this for you.
    env:
      COPILOT_AGENT_FIREWALL_ALLOW_LIST_ADDITIONS: fonts.googleapis.com,telemetry.nextjs.org,registry.npmjs.org

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install JavaScript dependencies
        run: npm ci

      - name: Configure environment for offline work
        run: |
          echo "Configuring environment for potential firewall restrictions..."

          # Set environment variables to reduce external calls
          echo "NEXT_TELEMETRY_DISABLED=1" >> $GITHUB_ENV
          echo "NODE_ENV=production" >> $GITHUB_ENV

          # Create cache directories
          mkdir -p .next/cache
          mkdir -p node_modules/.cache

          echo "Environment configured for offline-first development"

      - name: Verify Node.js version
        run: |
          echo "Node.js version: $(node --version)"
          echo "npm version: $(npm --version)"
          echo "Required Node.js version from .nvmrc: $(cat .nvmrc)"

      - name: Setup completed
        run: echo "âœ… Copilot environment setup completed successfully"
