name: E2E Tests Matrix

on:
  workflow_dispatch:
    inputs:
      browsers:
        description: 'Browsers to test (comma-separated: chromium,firefox,webkit)'
        required: false
        default: 'chromium,firefox,webkit'
  push:
    branches: [main]
    paths:
      - 'e2e/**'
      - 'src/**'
      - 'playwright.config.*'
      - 'docker/e2e/**'

jobs:
  e2e-matrix:
    name: E2E Tests (${{ matrix.browser }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Setup Docker
        run: |
          docker --version
          docker-compose --version
          
      - name: Run E2E tests for ${{ matrix.browser }}
        env:
          PLAYWRIGHT_PROJECT: ${{ matrix.browser }}
        run: |
          # Create browser-specific docker-compose override
          mkdir -p docker/e2e/matrix
          cat > docker/e2e/matrix/docker-compose.override.yml << EOF
          version: '3.8'
          services:
            e2e-tests:
              command: >
                sh -c "
                  npx wait-on http://app:3000 --timeout 60000 &&
                  npx playwright test --config=playwright.config.docker.ts --project=${{ matrix.browser }}
                "
          EOF
          
          # Copy override to docker-compose directory
          cp docker/e2e/matrix/docker-compose.override.yml docker/e2e/
          
          # Run tests with browser-specific configuration
          npm run test:e2e:docker
          
      - name: Upload Playwright report (${{ matrix.browser }})
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}
          path: playwright-report/
          
      - name: Upload test results (${{ matrix.browser }})
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.browser }}
          path: test-results/